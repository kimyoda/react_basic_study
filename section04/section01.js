// Meta(Facebook)이 개발한 오픈소스 JavaScript 라이브러리
// 대규모 웹 서비스의 UI를 더 편하게 개발하기 위해 만들어진 기술
// 넷플릭스, 페이스북, 인스타그램, 노션 등(만들어진 서비스)
// 기술적인 특징은
// 1. 컴포넌트를 기반으로 UI를 표현한다, 화면 업데이트 구현이 쉽다, 화면 업데이트가 빠르게 처리된다
// 1. 컴포넌트를 기반으로 UI를 표현한다(컴포넌트를 모듈화한다)
// -> Header.js, Main.js, Footer.js로 각각 화면의 구성요소로 나눠서 만든다

// 2. 화면 업데이트 구현이 쉽다
// 업데이트란? 사용자의 행동(클릭, 드래그)에 따라 웹 페이지가 스스로 모습을 바꿔 상호작용 하는 것
// 선언형 프로그래밍 -> 과정은 생략하고 목적만 간결히 명시하는 방법이다.(토마토 파스타 주세요)
// 명령형 프로그래밍 -> 목적을 이루기 위한 모든 일련의 과정을 설명하는 방식이다.(모든 것을 일일이 주문)
// 리액트(선언형 프로그래밍 방식), 목적만 깔끔하게 명시하고 코드가 간결하다
// 페이지를 컴포넌트라는 단위로 나눠서 만든다.(각 컴포넌트에는 State라는 상태를 저장하는 변수를 저장할 수 있음.)
// State 변수의 값으로 각각 다른 렌더링을 할 수 있다. 렌더링(Rendering)은 UI 요소를 화면에 그려내는 것을 말한다.
// -> 업데이트를 위한 복잡한 동작을 정의할 필요 없이 특정 변수의 값을 바꾸는 것만으로도 화면을 업데이트 할 수 있다.

// 3. 화면 업데이트가 빠르게 처리된다.
// 화면 업데이트를  쉽게 구현 및 빠르게 처리할 수 있도록 한다.
// 브라우저의 렌더링 과정(Critical Rendering Path)
// HTML -> DOM -> Render Tree(<- CSSOM <- CSS) -> Layout -> Painiting
// JavaScript가 DOM을 수정하면 업데이트가 발생한다(* Layout과 Painting은 매우 오래걸리는 과정이다)
// 다양한 업데이트 -> 동시에 발생한 업데이트를 모음 -> 다 모였다면 한번에 수정 -> DOM
// React는 이 과정을 자동으로 해준다(Feat. Virt4ual DOM)
// Virtual DOM이란?
// - DOM을 자바스크립트 객체로 흉내낸 것으로 일종의 복제판이다.
// React는 업데이트가 발생하면 실제 DOM을 수정하기 전에 이 가상의 복제판 DOM에 먼저 반영한다. 연습 스윙같은 느낌이라고 생각하면 됀다.
